stages:
  - setup
  - validate
  - test
  - report

variables:
  ATTACH_MODE: "existing_env" # override per-project/environment as needed

setup:
  stage: setup
  image: ubuntu:24.04
  before_script:
    - apt-get update && apt-get install -y git jq bash ca-certificates curl unzip
    - |
      TF_VERSION=1.7.5
      curl -fsSL https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -o /tmp/terraform.zip
      unzip -o /tmp/terraform.zip -d /usr/local/bin
  script:
    - bash -lc "scripts/setup.sh"
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

validate:
  stage: validate
  image: ubuntu:24.04
  needs: ["setup"]
  before_script:
    - apt-get update && apt-get install -y git jq bash ca-certificates curl unzip
    - |
      TF_VERSION=1.7.5
      curl -fsSL https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -o /tmp/terraform.zip
      unzip -o /tmp/terraform.zip -d /usr/local/bin
  script:
  - bash -lc "scripts/ci-env-check.sh"
  - bash -lc "scripts/validate.sh"
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

cloud-check:
  stage: report
  image: ubuntu:24.04
  needs: ["validate"]
  before_script:
    - apt-get update && apt-get install -y jq bash ca-certificates curl
  script:
    - bash -lc "scripts/confluent-check.sh"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

keygen:
  stage: test
  image: hashicorp/terraform:1.7.5
  needs: ["validate"]
  rules:
    - if: "$GENERATE_KAFKA_API_KEY == \"1\""
  before_script:
    - apk add --no-cache bash jq curl
  script:
    - bash -lc "chmod +x scripts/generate-kafka-api-key.sh && scripts/generate-kafka-api-key.sh"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

source-topics:
  stage: test
  image: ubuntu:24.04
  needs: ["validate"]
  before_script:
    - apt-get update && apt-get install -y jq bash ca-certificates curl
  script:
    - bash -lc "chmod +x scripts/test-source.sh && scripts/test-source.sh"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

flink-topics:
  stage: test
  image: ubuntu:24.04
  needs: ["validate"]
  before_script:
    - apt-get update && apt-get install -y jq bash ca-certificates curl
  script:
    - bash -lc "chmod +x scripts/test-flink.sh && scripts/test-flink.sh"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days

smoke-kafka-key:
  stage: test
  image: ubuntu:24.04
  needs: ["validate"]
  rules:
    - if: "$SMOKE_KAFKA_KEY == \"1\""
  before_script:
    - apt-get update && apt-get install -y jq bash ca-certificates curl
  script:
    - bash -lc "chmod +x scripts/smoke-kafka-key.sh && scripts/smoke-kafka-key.sh"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - artifacts/logs/
      - artifacts/sessions/
    expire_in: 7 days